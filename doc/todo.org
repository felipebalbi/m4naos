* TODO M4naos List of To-Do items [5/11]
** DONE Reset handler
   CLOSED: [2021-02-26 Fri 20:01]
   :LOGBOOK:
   - State "DONE"       from "TODO"       [2021-02-26 Fri 20:01]
   :END:

** DONE Drivers Base
   CLOSED: [2021-02-26 Fri 20:01]
   :LOGBOOK:
   - State "DONE"       from "TODO"       [2021-02-26 Fri 20:01]
   :END:

** DONE SysTick handler
   CLOSED: [2021-02-26 Fri 20:01]
   :LOGBOOK:
   - State "DONE"       from "TODO"       [2021-02-26 Fri 20:01]
   :END:

** TODO Context Switching [1/2]

*** DONE Task Linked List
    CLOSED: [2021-02-26 Fri 20:01]
    :LOGBOOK:
    - State "DONE"       from "TODO"       [2021-02-26 Fri 20:01] \\
      done
    :END:

*** TODO Task Priority Queue

** DONE =newlib-nano= Integration
   CLOSED: [2021-02-26 Fri 20:01]
   :LOGBOOK:
   - State "DONE"       from "TODO"       [2021-02-26 Fri 20:01]
   :END:

** TODO IRQ Subsystem [3/4]

*** DONE Implement basic types
    CLOSED: [2021-06-25 Fri 18:23]
    :LOGBOOK:
    - State "DONE"       from "TODO"       [2021-06-25 Fri 18:23] \\
      Completed
    :END:

*** DONE Trap device interrupts to stub handler
    CLOSED: [2021-06-25 Fri 18:24]
    :LOGBOOK:
    - State "DONE"       from "TODO"       [2021-06-25 Fri 18:24] \\
      Completed
    :END:

*** TODO Implement generic IRQ handler [1/4]

**** DONE Figure out how to read current IRQ number
     CLOSED: [2021-06-25 Fri 18:35]
     :LOGBOOK:
     - State "DONE"       from "TODO"       [2021-06-25 Fri 18:35] \\
       Completed. The idea is to read IPSR special register. ISR_NUMBER will
       be in the lowest byte.
     :END:

**** TODO Check if $this IRQ is enabled

**** TODO Call handler with correct arguments

**** TODO Test with GPIO Interrupts

*** CANCELED Implement IRQ handling thread
    CLOSED: [2021-06-25 Fri 18:26]
    :LOGBOOK:
    - State "CANCELED"   from "TODO"       [2021-06-25 Fri 18:26] \\
      We're not going to use IRQ handling threads. At least not for the time
      being. This is because IRQs have controllable priorities and higher
      priority interrupts can already preempt lower priority handlers; this
      is given to us for free by the HW.
    :END:

** TODO Input Subsystem
** TODO USB Subsystem
** TODO Pin muxing [3/4]
*** DONE Define a data format for pinmuxing
    CLOSED: [2021-03-03 Wed 14:06]
    :LOGBOOK:
    - State "DONE"       from "TODO"       [2021-03-03 Wed 14:06] \\
      Completed
    :END:
*** TODO Describe the required pinmuxing for my keyboard project
*** DONE Describe the required pinmuxing for USART1
    CLOSED: [2021-03-03 Wed 14:06]
    :LOGBOOK:
    - State "DONE"       from "TODO"       [2021-03-03 Wed 14:06] \\
      completed
    :END:
*** DONE Initialize pins per pinmuxing description
    CLOSED: [2021-03-03 Wed 14:06]
    :LOGBOOK:
    - State "DONE"       from "TODO"       [2021-03-03 Wed 14:06] \\
      completed
    :END:
** DONE Convert drivers to use ioremap
   CLOSED: [2021-03-03 Wed 14:06]
   :LOGBOOK:
   - State "DONE"       from "TODO"       [2021-03-03 Wed 14:06] \\
     completed
   :END:
** TODO Scheduler [1/2]
*** DONE Round Robin Scheduler
    CLOSED: [2021-02-26 Fri 20:19]
    :LOGBOOK:
    - State "DONE"       from "TODO"       [2021-02-26 Fri 20:19]
    :END:
*** TODO Earliest Deadline Scheduler

